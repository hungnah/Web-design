# Generated by Django 5.2.5 on 2025-08-14 09:39

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('event_creation', '0011_alter_languageexchangepost_status'),
    ]

    operations = [
        migrations.CreateModel(
            name='CulturalLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Location name', max_length=100)),
                ('location_type', models.CharField(choices=[('historical', 'Historical Site'), ('museum', 'Museum'), ('temple', 'Temple/Pagoda'), ('market', 'Traditional Market'), ('park', 'Park/Garden'), ('landmark', 'Landmark'), ('cultural_center', 'Cultural Center'), ('workshop', 'Cultural Workshop'), ('performance', 'Performance Venue'), ('heritage', 'Heritage Site')], help_text='Type of cultural location', max_length=20)),
                ('address', models.TextField(help_text='Full address')),
                ('city', models.CharField(choices=[('hanoi', 'Hà Nội'), ('hochiminh', 'Hồ Chí Minh'), ('haiphong', 'Hải Phòng'), ('danang', 'Đà Nẵng'), ('cantho', 'Cần Thơ'), ('hue', 'Huế'), ('hoian', 'Hội An'), ('sapa', 'Sa Pa'), ('nhatrang', 'Nha Trang'), ('dalat', 'Đà Lạt')], help_text='City for filtering locations', max_length=20)),
                ('cultural_description', models.TextField(help_text='Description of cultural significance')),
                ('best_time_to_visit', models.CharField(blank=True, help_text='Best time to visit', max_length=100)),
                ('entrance_fee', models.CharField(blank=True, help_text='Entrance fee information', max_length=50)),
                ('opening_hours', models.CharField(blank=True, help_text='Opening hours', max_length=100)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, help_text='GPS latitude', max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, help_text='GPS longitude', max_digits=9, null=True)),
                ('description', models.TextField(blank=True, help_text='Additional details about the location')),
                ('cultural_tips', models.TextField(blank=True, help_text='Cultural etiquette and tips for visitors')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['city', 'name'],
            },
        ),
        migrations.RemoveField(
            model_name='languageexchangepost',
            name='cafe_location',
        ),
        migrations.AddField(
            model_name='languageexchangepost',
            name='applicant_text',
            field=models.TextField(blank=True, default='', help_text='Text content provided by the applicant for this session'),
        ),
        migrations.AddField(
            model_name='languageexchangepost',
            name='poster_text',
            field=models.TextField(blank=True, default='', help_text='Text content provided by the poster for this session'),
        ),
        migrations.AlterField(
            model_name='languageexchangepost',
            name='status',
            field=models.CharField(choices=[('active', 'Active'), ('matched', 'Matched'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='active', max_length=15),
        ),
        migrations.AlterField(
            model_name='vietnamesephrase',
            name='category',
            field=models.CharField(choices=[('greetings', 'Greetings'), ('food', 'Food & Dining'), ('shopping', 'Shopping'), ('transport', 'Transportation'), ('emergency', 'Emergency'), ('daily', 'Daily Life'), ('business', 'Business'), ('travel', 'Travel'), ('culture', 'Culture & Customs'), ('tourism', 'Tourism & Sightseeing')], help_text='Topic category', max_length=20),
        ),
        migrations.CreateModel(
            name='CulturalLesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Lesson title', max_length=200)),
                ('description', models.TextField(help_text='Lesson description')),
                ('vocabulary_list', models.TextField(help_text='Key vocabulary for this location')),
                ('essential_phrases', models.TextField(help_text='Essential phrases to know')),
                ('cultural_context', models.TextField(help_text='Cultural background and context')),
                ('difficulty', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], max_length=15)),
                ('estimated_duration', models.PositiveIntegerField(help_text='Estimated duration in minutes')),
                ('order', models.PositiveIntegerField(default=0, help_text='Order in the lesson sequence')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cultural_lessons', to='event_creation.culturallocation')),
            ],
            options={
                'ordering': ['location', 'order', 'difficulty'],
            },
        ),
        migrations.CreateModel(
            name='CulturalChallenge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Challenge title', max_length=200)),
                ('description', models.TextField(help_text='Challenge description')),
                ('challenge_type', models.CharField(choices=[('conversation', 'Conversation Challenge'), ('question_asking', 'Question Asking'), ('cultural_exchange', 'Cultural Exchange'), ('local_interaction', 'Local Interaction')], max_length=20)),
                ('difficulty', models.CharField(choices=[('easy', 'Easy'), ('medium', 'Medium'), ('hard', 'Hard')], max_length=15)),
                ('objective', models.TextField(help_text='What the user needs to accomplish')),
                ('success_criteria', models.TextField(help_text='How success is measured')),
                ('time_limit', models.PositiveIntegerField(blank=True, help_text='Time limit in minutes', null=True)),
                ('helpful_phrases', models.TextField(blank=True, help_text='Phrases that might help with the challenge')),
                ('cultural_tips', models.TextField(blank=True, help_text='Cultural tips for the challenge')),
                ('order', models.PositiveIntegerField(default=0, help_text='Order in the challenge sequence')),
                ('is_final_challenge', models.BooleanField(default=False, help_text='Is this the final challenge of the session')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cultural_challenges', to='event_creation.culturallocation')),
            ],
            options={
                'ordering': ['location', 'order', 'difficulty'],
            },
        ),
        migrations.AddField(
            model_name='languageexchangepost',
            name='cultural_location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='event_creation.culturallocation'),
        ),
        migrations.DeleteModel(
            name='CafeLocation',
        ),
    ]
